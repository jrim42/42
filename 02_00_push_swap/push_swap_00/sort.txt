void	stk_a2b(t_stack *a, t_stack *b, int b_piv, int s_piv)
{
	int		size;
	int		ra_cnt;
	int		rb_cnt;
	int		pb_cnt;
	t_node	*tmp;

	size = a->size;
	ra_cnt = 0;
	rb_cnt = 0;
	pb_cnt = 0;
	while (size--)
	{
		tmp = a->top;
		if (tmp->data >= b_piv)
		{
			cmd_rotate("ra", a);
			ra_cnt++;
		}
		else
		{
			cmd_push("pb", a, b);
			pb_cnt++;
			if (tmp->data < s_piv)
			{
				cmd_rotate("rb", b);
				rb_cnt++;
			}
		}
	}
	//stk_display_all(a, b);
	while (ra_cnt-- && rb_cnt--)
	{
		cmd_rev_rotate("rrr", a);
		cmd_rev_rotate(0, b);
	}
	while (ra_cnt-- > 0)
		cmd_rev_rotate("rra", a);
	while (rb_cnt-- > 0)
		cmd_rev_rotate("rrb", b);
}

void	stk_b2a(t_stack *a, t_stack *b, int b_piv, int s_piv)
{
	int		size;
	int		rb_cnt;
	int		pa_cnt;
	int		ra_cnt;
	t_node	*tmp;

	size = b->size;
	rb_cnt = 0;
	pa_cnt = 0;
	ra_cnt = 0;
	while (size--)
	{
		tmp = b->top;
		if (tmp->data >= b_piv)
		{
			cmd_rotate("rb", b);
			rb_cnt++;
		}
		else
		{
			cmd_push("pa", b, a);
			pa_cnt++;
			if (tmp->data < s_piv)
			{
				cmd_rotate("ra", a);
				ra_cnt++;
			}
		}
	}
	//stk_display_all(a, b);
	while (ra_cnt-- && rb_cnt--)
	{
		cmd_rev_rotate("rrr", a);
		cmd_rev_rotate(0, b);
	}
	while (ra_cnt-- > 0)
		cmd_rev_rotate("rra", a);
	while (rb_cnt-- > 0)
		cmd_rev_rotate("rrb", b);
}